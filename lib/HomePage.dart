import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:provider/provider.dart';
import 'package:sakoon_shar/FavoritePageStorage.dart';
import 'package:sakoon_shar/IAPScreen.dart';
import 'package:sakoon_shar/TableOfContent.dart';
import 'package:sakoon_shar/Utils.dart';

import 'CustomColors.dart';
import 'FavoritePageGrid.dart';
import 'ThemeProvider.dart';
import 'main.dart';

class HomePage extends StatefulWidget {
  @override
  _HomePageState createState() => _HomePageState();
}

class _HomePageState extends State<HomePage> {
  // Method to load data
  @override
  void initState() {
    super.initState();
    _loadFontSize();
    loadIp();

  }


  bool showBtn = false;

  loadIp() async {
    await Utils.loadBool(Utils.ip).then((result) {
      setState(() {
        showBtn = !result;
      });
      return false;
    });

  }

  @override
  Widget build(BuildContext context) {
    // final brightness = MediaQuery.of(context).platformBrightness;
    // isDarkMode = brightness == Brightness.dark;
    //final themeProvider = Provider.of<ThemeProvider>(context);

    bool isDarkMode = ThemeProvider.isDark;
    print("X_$isDarkMode");
    // SystemChrome.setSystemUIOverlayStyle(SystemUiOverlayStyle(
    //   statusBarColor: Color(0xFFEADBCB), // Or any custom color
    //   statusBarIconBrightness: Brightness.dark, // For dark icons on light background
    //   statusBarBrightness: Brightness.light, // For iOS (status bar text color)
    // ));
    // isDarkMode = ThemeMode..toString().split('.').last.toString()!="light";

    return Scaffold(
        appBar: AppBar(
          // iconTheme: IconThemeData(color: Theme.of(context).colorScheme.onSurface), // change arrow color
          backgroundColor: Theme.of(context).colorScheme.onSecondary,
          toolbarHeight: 0,
        ),


        body: SafeArea(
        child: Stack(
        alignment: Alignment.center,
        children: [
          // üé® Gradient overlay (semi-transparent black)
          Container(
            decoration: BoxDecoration(
              color: Color(
                  0xFFd8d2c6), // This will show when image doesn't fill the space
              image: DecorationImage(
                image: AssetImage('assets/images/sakoon_cover.jpg'),
                fit: BoxFit.fitHeight,
                scale: 2, // Changed from fill to cover
                alignment: Alignment.center, // Center the image
              ),
            ),
            constraints: BoxConstraints
                .expand(), // Ensure container fills available space
          ),
          // üåë Radial Gradient overlay
          Positioned.fill(
            child: Container(
              decoration: BoxDecoration(
                gradient: RadialGradient(
                  center: Alignment.center,
                  radius: isDarkMode?1.3:1.0, // Increase for wider coverage
                  colors: [
                    Colors.black.withValues(alpha: isDarkMode?0.6:0.4), // Center is darker
                    Colors.transparent, // Edge is clear
                  ],
                  stops: [0.0, 3.0],
                ),
              ),
            ),
          ),
          Center(
            child: SingleChildScrollView(
              child: Column(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  // SwitchListTile(
                  //   title: Text("Night Mode"),
                  //   value: isDark,
                  //   onChanged: (val) {
                  //     themeProvider.setThemeMode(val?ThemeMode.dark:ThemeMode.light);
                  //   },
                  // ),

                  SizedBox(height: 60),
                  SizedBox(
                    width: 200,
                    height: 60, // Fixed height
                    child: ElevatedButton(
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Color(0xf2d8d0b8),
                        ),
                        onPressed: () {
                          if (Utils.updateFontSize != 0) {
                            Navigator.push(
                              context,
                              MaterialPageRoute(
                                  builder: (context) => MyHomePage(
                                        index: 0,
                                        size1: Utils.updateFontSize,
                                      )),
                            );
                          } else {
                            _loadFontSize();
                            ScaffoldMessenger.of(context).showSnackBar(
                              SnackBar(
                                content: Text('Try Again!'),
                                duration: Duration(seconds: 1),
                              ),
                            );
                          }
                        },
                        child: Text(
                          'ÿØ ÿ≥⁄©ŸàŸÜ ⁄öÿßÿ± ŸÑŸàÿ≥ÿ™',
                          style: TextStyle(
                            color: Color(0xff1b5a4b),
                            fontSize: 16,
                            fontWeight: FontWeight.bold,
                          ),
                        )),
                  ),
                  // SizedBox(height: 16),
                  // ElevatedButton.icon(
                  //   style: ElevatedButton.styleFrom(
                  //     backgroundColor: Color(0xff1b5a4b),
                  //     padding: EdgeInsets.symmetric(horizontal: 12, vertical: 8),
                  //     shape: RoundedRectangleBorder(
                  //       borderRadius: BorderRadius.circular(10),
                  //     ),
                  //   ),
                  //   onPressed: () {
                  //     // You can trigger purchase, unlock flow, or bottom sheet here
                  //     showModalBottomSheet(
                  //       context: context,
                  //       isScrollControlled: true,
                  //       shape: RoundedRectangleBorder(
                  //         borderRadius: BorderRadius.vertical(top: Radius.circular(20)),
                  //       ),
                  //       builder: (_) => Padding(
                  //         padding: MediaQuery.of(context).viewInsets,
                  //         child: IAPBottomSheet(),
                  //       ),
                  //     );
                  //   },
                  //   icon: Icon(Icons.lock_open, color: Colors.white),
                  //   label: Text(
                  //     'Unlock Full Book',
                  //     style: TextStyle(color: Colors.white, fontWeight: FontWeight.bold),
                  //   ),
                  // ),

                  SizedBox(height: 16),
                  SizedBox(
                    width: 200,
                    height: 60,
                    child: ElevatedButton(
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Color(0xf2d8d0b8),
                        ),
                        onPressed: () {
                          _loadSavedData();
                        },
                        child: Text(
                          'ÿØ ŸæÿÆŸàÿßŸÜŸä ŸÑŸàÿ≥ÿ™ ÿßÿØÿßŸÖŸá',
                          style: TextStyle(
                            color: Color(0xff1b5a4b),
                            fontSize: 16,
                            fontWeight: FontWeight.bold,
                          ),
                        )),
                  ),
                  SizedBox(height: 16),
                  SizedBox(
                    width: 200,
                    height: 60,
                    child: ElevatedButton(
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Color(0xf2d8d0b8),
                        ),
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                                builder: (context) => TableOfContent()),
                          );
                        },
                        child: Text(
                          'ŸÑ⁄ìŸÑ€å⁄©',
                          style: TextStyle(
                            color: Color(0xff1b5a4b),
                            fontSize: 16,
                            fontWeight: FontWeight.bold,
                          ),
                        )),
                  ),
                  SizedBox(height: 16),
                  SizedBox(
                    width: 200,
                    height: 60,
                    child: ElevatedButton(
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Color(0xf2d8d0b8),
                        ),
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (_) => FavoritePagesScreen(),
                            ),
                          );
                        },
                        child: Text(
                          'ŸÜ⁄öŸá ÿ¥Ÿà€ê Ÿæÿß⁄º€ê',
                          style: TextStyle(
                            color: Color(0xff1b5a4b),
                            fontSize: 16,
                            fontWeight: FontWeight.bold,
                          ),
                        )),
                  ),
                  SizedBox(height: 16),
                  SizedBox(
                    width: 200,
                    height: 60,
                    child: ElevatedButton(
                      style: ElevatedButton.styleFrom(
                        backgroundColor: Color(0xf2d8d0b8),
                      ),
                      onPressed: () {
                        _showBottomSheet(context);
                      },
                      child: Text(
                        'ÿØ ⁄©ÿ™ÿßÿ® ŸæŸá ÿß⁄ìŸá',
                        style: TextStyle(
                          color: Color(0xff1b5a4b),
                          fontSize: 16,
                          fontWeight: FontWeight.bold,
                        ),
                      ),
                    ),
                  ),
                  SizedBox(height: 60),
                ],
              ),
            ),
          ),

          Positioned(
            right: 10,
            top: 15,
            child:
            Card(
              elevation: isDarkMode?2:4,
              color: isDarkMode?Color(0xffc8c2b6):Color(0xFFd8d2c6),
              shape: RoundedRectangleBorder(
                borderRadius: BorderRadius.circular(12),
              ),
              child: Padding(
                padding: const EdgeInsets.all(8.0),
                child: GestureDetector(
                  onTap: () {
                    // themeProvider.setThemeMode(!isDarkMode);
                    // setState(() {
                    //   isDarkMode = !isDarkMode;
                    // });
                  },
                  child: AnimatedSwitcher(
                    duration: const Duration(milliseconds: 300),
                    transitionBuilder: (child, animation) {
                      return RotationTransition(
                        turns: animation,
                        child: child,
                      );
                    },
                    child:
                    Stack(
                      children: [
                        // Shadow layer
                        Positioned(
                          top: 2,
                          left: 2,
                          child: Image.asset(
                            isDarkMode
                                ? 'assets/images/icon_night.png'
                                : 'assets/images/icon_day.png',
                            key: ValueKey('shadow_${isDarkMode.toString()}'),
                            width: 30,
                            height: 30,
                            color: Colors.black54.withAlpha(60),
                          ),
                        ),

                        // Main image
                        Image.asset(
                          isDarkMode
                              ? 'assets/images/icon_night.png'
                              : 'assets/images/icon_day.png',
                          key: ValueKey(isDarkMode),
                          width: 30,
                          height: 30,
                        ),
                      ],
                    )

                    // Image.asset(
                    //   isDarkMode
                    //       ? 'assets/images/icon_night.png'
                    //       : 'assets/images/icon_day.png',
                    //   key: ValueKey(isDarkMode),
                    //   width: 30,
                    //   height: 30,
                    // ),
                    //

                  ),
                ),
              ),
            )

            // GestureDetector(
            //   onTap: () {
            //     themeProvider.setThemeMode(!isDarkMode);
            //     setState(() {
            //       isDarkMode = !isDarkMode;
            //     });
            //   },
            //   child: AnimatedSwitcher(
            //       duration: const Duration(milliseconds: 300),
            //       transitionBuilder: (child, animation) {
            //         return RotationTransition(
            //             turns: animation, child: child);
            //       },
            //       child: Image.asset(
            //         isDarkMode
            //             ? 'assets/images/icon_night.png'
            //             : 'assets/images/icon_day.png',
            //         key: ValueKey(isDarkMode),
            //         width:   30,
            //         height:  30,
            //
            //       )
            //
            //     // Icon(
            //     //   AssetImage('assets/images/sakoon_cover.jpg') as IconData?,
            //     //   key: const ValueKey('dark'),
            //     //   color: Colors.orange,
            //     //   size: 60,
            //     // )
            //     //     :ImageIcon(
            //     //   size: 60,
            //     //   AssetImage('assets/images/icon_day.png'),
            //     //   key: const ValueKey('dark'),
            //     // ),
            //   ),
            // ),
            //
          ),


          if(showBtn)Positioned(
            bottom: 0,
            child: Center(
              child: ElevatedButton.icon(
                style: ElevatedButton.styleFrom(
                  backgroundColor: Color(0xff1b5a4b),
                  padding: EdgeInsets.symmetric(horizontal: 12, vertical: 8),
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(10),
                  ),
                ),
                onPressed: () {
                  // You can trigger purchase, unlock flow, or bottom sheet here
                  showModalBottomSheet(
                    context: context,
                    isScrollControlled: true,
                    shape: RoundedRectangleBorder(
                      borderRadius:
                          BorderRadius.vertical(top: Radius.circular(20)),
                    ),
                    builder: (_) => Padding(
                      padding: MediaQuery.of(context).viewInsets,
                      // child: IAPBottomSheet(),
                    ),
                  );
                },
                icon: Icon(Icons.lock_open, color: Colors.white),
                label: Text(
                  'Unlock Full Book',
                  style: TextStyle(
                      color: Colors.white, fontWeight: FontWeight.bold),
                ),
              ),
            ),
          ),
        ],
      ),
    ));
  }

  void _loadSavedData() async {
    int loadedData = await Utils.loadInt(Utils.indexKey);

    setState(() {
      Navigator.push(
        context,
        MaterialPageRoute(
            builder: (context) => MyHomePage(
                  index: loadedData,
                  size1: Utils.updateFontSize,
                )),
      );
      print('Continue clicked $loadedData');
    });
  }

  void _loadFontSize() async {
    Utils.updateFontSize = await Utils.loadDouble(Utils.fontSize1);
    print('Font Size updated');
  }


  void _showBottomSheet(BuildContext context) {
    showModalBottomSheet(
      context: context,
      isScrollControlled: true, // Important for allowing full height scroll
      shape: RoundedRectangleBorder(
        borderRadius: BorderRadius.vertical(top: Radius.circular(20)),
      ),
      builder: (context) {
        return DraggableScrollableSheet(
          expand: false,
          maxChildSize: 0.9,
          minChildSize: 0.3,
          builder: (context, scrollController) {
            return SingleChildScrollView(
              controller: scrollController,
              padding: const EdgeInsets.all(16),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Center(
                    child: Text(
                      'ÿ≥⁄©ŸàŸÜ ⁄öÿßÿ±',
                      style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
                      textDirection: TextDirection.rtl,
                    ),
                  ),
                  SizedBox(height: 10),
                  Text(
                    sukoonDescription,
                    style: TextStyle(fontSize: 16),
                    textDirection: TextDirection.rtl,
                  ),
                ],
              ),
            );
          },
        );
      },
    );}
  // void _showBottomSheet(BuildContext context) {
  //   showModalBottomSheet(
  //     context: context,
  //     shape: RoundedRectangleBorder(
  //       borderRadius: BorderRadius.vertical(top: Radius.circular(20)),
  //     ),
  //     builder: (context) {
  //       return Padding(
  //         padding: const EdgeInsets.all(16.0),
  //         child: Column(
  //           mainAxisSize: MainAxisSize.min,
  //           crossAxisAlignment: CrossAxisAlignment.start,
  //           children: [
  //             SingleChildScrollView(
  //               child: Text(
  //                 'ÿØ ⁄©ÿ™ÿßÿ® ŸæŸá ÿß⁄ìŸá',
  //                 style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
  //               ),
  //             ),
  //             SizedBox(height: 10),
  //             Text(sukoonDescription,
  //               style: TextStyle(fontSize: 16),
  //             ),
  //           ],
  //         ),
  //       );
  //     },
  //   );
  // }

  String sukoonDescription = '''
ÿ≥⁄©ŸàŸÜ ⁄öÿßÿ± ÿØ ÿπÿ®€åÿØÿßŸÑŸÑŸá ÿ≠ÿ≥ÿßŸÖ ŸÑŸàŸÖ⁄ì€å ⁄©ÿ™ÿßÿ® ÿØ€å ⁄Ü€ê ÿØ ÿ¥ÿßŸàÿÆŸàÿß €åŸà€ê ŸÑÿ≥€åÿ≤€ê ÿØ ŸÖÿ∑ÿßŸÑÿπ€êÿå ÿ™ÿ¨ÿ±ÿ®Ÿà ÿßŸà ÿ≤ÿØ⁄©⁄ìŸà ŸÜ⁄ÜŸà⁄ì ÿØ€å.
ŸæŸá ÿØÿ∫Ÿá ŸÖŸàÿØŸá ⁄©€ê ŸÜŸàŸÖŸà⁄ìŸä ÿØ ŸÑÿ≥⁄´ŸàŸÜŸá ÿ™⁄©⁄ìŸá ÿπŸÑŸÖÿßŸàŸà ÿØ ÿ≥ŸÑ⁄´ŸàŸÜŸá ⁄©ÿ™ÿßÿ®ŸàŸÜŸàÿå ŸÖŸÇÿßŸÑŸà ÿßŸà Ÿà€å⁄â€åŸà⁄´ÿßŸÜŸà ŸæŸá ŸÑŸàÿ≥ÿ™ŸÑŸà ÿßŸà ⁄©ÿ™ŸÑŸà ÿÆŸæŸÑ ŸÅ⁄©ÿ± ÿ∫ŸÜŸä ⁄©⁄ì€å ÿßŸà ÿØ Ÿáÿ∫€ê ŸæŸá ÿ®ŸÜÿ≥Ÿº €å€ê ÿ≥ÿ™ÿßÿ≥€ê ÿØÿ±ŸÜŸà ŸÑŸàÿ≥ÿ™ŸàŸÜ⁄©Ÿà ŸÑŸæÿßÿ±Ÿá ÿØ ÿ≥⁄©ŸàŸÜ ⁄öÿßÿ± ⁄©ÿ™ÿßÿ® ŸÑ€å⁄©ŸÑ€å ÿØ€å.
ÿØÿß ⁄©ÿ™ÿßÿ® ÿ®Ÿá ÿ™ÿßÿ≥€ê ÿ≥ÿ±Ÿá ÿØ ÿÆŸàÿ¥ÿ≠ÿßŸÑŸá ÿ≤⁄ìŸá ÿßŸà ÿ±Ÿàÿ≠Ÿä ÿ≥⁄©ŸàŸÜ ÿ™ÿ±ŸÑÿßÿ≥Ÿá ⁄©ŸàŸÑŸà ÿ™ÿ±⁄ÖŸÜ⁄´ ÿØ ÿ®ÿ±€åÿßŸÑŸä ÿ¥ÿÆÿµ€åÿ™ ÿØÿ±ŸÑŸàÿØŸà ⁄©€ê ŸÖÿ±ÿ≥ÿ™Ÿá Ÿà⁄©⁄ìŸä ÿßŸÜ ÿ¥ÿßÿ° ÿßŸÑŸÑŸá.
ŸæŸá ÿßŸÅÿ∫ÿßŸÜÿ≥ÿ™ÿßŸÜ ÿßŸà ÿ®Ÿáÿ±ŸÜ€åŸà Ÿá€êŸàÿßÿØŸàŸÜŸà ⁄©€ê ÿ≤ŸÖŸà⁄ñ ÿØ ⁄´ÿ±ÿßŸÜŸà Ÿá€êŸàÿßÿØŸàÿßŸÑŸà ŸÑÿÆŸàÿß ÿØ ÿ≥⁄©ŸàŸÜ ⁄öÿßÿ± Ÿæÿ±ÿßÿÆ ÿßŸà ÿ™ŸàÿØ Ÿáÿ±⁄©ŸÑŸä ÿØ€ê ÿ™Ÿá ŸàŸá⁄ÖŸàŸÑŸà ⁄Ü€ê ÿØÿØ€ê ⁄©ÿ™ÿßÿ® ŸÖÿ®ÿß€åŸÑ ÿßŸæŸÑ€å⁄©ÿ¥ŸÜ ŸáŸÖ ÿ¨Ÿà⁄ì ⁄©⁄ìŸà ÿ™ÿ± ⁄ÖŸà Ÿàÿ±ÿ™Ÿá Ÿáÿ±⁄Åÿß€å ÿÆŸÑ⁄© ŸÑÿßÿ≥ÿ±ÿ≥€å ŸàŸÑÿ±Ÿä ÿßŸà ŸæŸá ÿ™ÿ±ŸÑÿßÿ≥Ÿá ⁄©ŸàŸÑŸà ⁄©€ê €å€ê ŸæŸá ÿ≤ÿ≠ŸÖÿ™ ŸÜŸá ÿ¥Ÿä.
ÿØ ÿØ€ê ⁄©ÿ™ÿßÿ® ⁄ÜÿßŸæ ÿ¥Ÿà€ê ÿ®⁄ºŸá ÿØ ÿßŸÅÿ∫ÿßŸÜÿ≥ÿ™ÿßŸÜ ŸæŸá ŸÖÿπÿ™ÿ®ÿ±Ÿà ⁄©ÿ™ÿßÿ® ŸæŸÑŸàÿ±ŸÜ⁄Å€åŸà ⁄©€ê ÿ™ÿ±ŸÑÿßÿ≥Ÿá ⁄©€êÿØÿß€å ÿ¥Ÿä.
ŸáŸÖÿØÿßÿ±ÿßÿ≤ ÿ™ÿßÿ≥€ê ⁄©Ÿàÿß€å ÿ¥ÿ¶ ÿ∫ÿ±ÿ®Ÿä Ÿá€êŸàÿßÿØŸàŸÜŸà ⁄©€ê €å€ê ŸÑŸá ŸÑÿßŸÜÿØ€ê Ÿà€åÿ® Ÿæÿß⁄º€ê ⁄ÖÿÆŸá ÿßŸÜŸÑÿß€åŸÜ ÿßÿ±⁄âÿ± ⁄©⁄ìÿ¶ÿå ⁄ÜÿßŸæ ÿ¥Ÿà€ê ÿ®⁄ºŸá ÿ®Ÿá €å€ê  ÿ≥ÿ™ÿßÿ≥€ê ÿ™ÿ± ⁄©Ÿàÿ±ŸàŸÜŸà ÿØÿ± Ÿàÿ±ÿ≥€å⁄ñŸä.
ÿØÿØ€ê ⁄©ÿ™ÿßÿ® ŸÑ€å⁄©ŸÑ ŸæŸá ÿØÿßÿ≥€ê ÿ®⁄ºŸá ÿ¥ŸàŸä ⁄Ü€ê ÿ™ÿ± ŸÑŸàÿ≥ÿ™Ÿà Ÿàÿ±Ÿàÿ≥ÿ™Ÿá €å€ê ŸÑŸá ŸÖÿ∑ÿßŸÑÿπ€ê ÿ≥ÿ±Ÿá ÿ≥ÿ™ÿßÿ≥€ê ŸÑ€êŸàÿßŸÑÿ™€åÿß Ÿæ€åÿØÿß ÿ¥Ÿä. ŸæŸá ŸáŸÖÿØ€ê Ÿá€åŸÑŸá!
⁄©Ÿá ÿØ ÿ≥⁄©ŸàŸÜ ⁄öÿßÿ± ŸÑŸá ŸÑŸàÿ≥ÿ™ŸÑŸà ÿ≥ÿ±Ÿá ŸÖŸà ŸÖÿ´ÿ®ÿ™ ÿ®ÿØŸÑŸàŸÜ ÿßÿ≠ÿ≥ÿßÿ≥ ⁄©⁄ìÿå ŸÖŸà⁄ñ ŸÑŸá ÿØÿπÿß Ÿá€êÿ± ŸÜŸá ⁄©⁄ìÿ¶!

Ÿà€êÿ® ÿ≥ÿß€åŸº: www.sukoonkhaar.com
ÿß€êŸÖ€êŸÑ ÿßÿØÿ±ÿ≥: info@sukoonkhaar.com
ŸàÿßŸºÿ≥ ÿßŸæ: 0093772051025
ÿØ ÿØ€ê ⁄©ÿ™ÿßÿ® Ÿáÿ± ⁄âŸàŸÑ ⁄ÜÿßŸæ ÿßŸà ÿÆŸæÿ±ŸàŸÑŸà ÿ≠ŸÇŸàŸÇ ŸÑŸá ŸÑ€å⁄©ŸàÿßŸÑ ÿ≥ÿ±Ÿá ÿÆŸàŸÜÿØŸä ÿØŸä.
''';

}



